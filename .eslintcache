[{"/Users/takuma/nuxt-tutorial/pages/index.vue":"1","/Users/takuma/nuxt-tutorial/store/index.js":"2"},{"size":1456,"mtime":1641724701617,"results":"3","hashOfConfig":"4"},{"size":1147,"mtime":1641720672225,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"8"},"1txetmf",{"filePath":"9","messages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/takuma/nuxt-tutorial/pages/index.vue",["11","12","13","14","15","16","17"],"<template>\n  <section class=\"container\">\n    <h1>Todo App</h1>\n    <p><input type=\"text\" name=\"content\" v-model=\"content\" @focus=\"set_flg\" /></p>\n    <div>\n      <button @click=\"insert\">save</button>\n      <button @click=\"find\">find</button>\n    </div>\n    <ul>\n      <li v-for=\"(todo, index) in display_todos\" :key=\"index\">\n        <span>{{ todo.content }}</span><span>({{ todo.created }})</span><span @click=\"remove(todo)\">Ã—</span>\n      </li>\n    </ul>\n  </section>\n\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n  data: () => ({\n    content: '',\n    find_flg: false\n  }),\n  computed: {\n    ...mapState(['todos']),\n    display_todos () {\n      if (this.find_flg) {\n        const arr = []\n        const data = this.todos\n        data.forEach((element) => {\n          if (element.content.toLowerCase() === this.content.toLowerCase()) {\n            arr.push(element)\n          }\n        })\n        return arr\n      } else {\n        return this.todos\n      }\n    }\n  },\n  methods: {\n    insert () {\n      this.$store.commit('insert', { content: this.content })\n      this.content = ''\n    },\n    find () {\n      this.find_flg = true\n    },\n    set_flg () {\n      if (this.find_flg) {\n        this.find_flg = false\n        this.content = ''\n      }\n    },\n    remove (todo) {\n      this.$store.commit('remove', todo)\n    }\n  }\n}\n\n</script>\n<style>\n  .theme--dark.v-application{\n    background: white;\n    color:black;\n  }\n</style>\n","/Users/takuma/nuxt-tutorial/store/index.js",["18"],{"ruleId":"19","severity":1,"message":"20","line":4,"column":8,"nodeType":"21","endLine":4,"endColumn":79,"fix":"22"},{"ruleId":"23","severity":1,"message":"24","line":4,"column":42,"nodeType":"25","endLine":4,"endColumn":59,"fix":"26"},{"ruleId":"27","severity":1,"message":"28","line":6,"column":31,"nodeType":"29","messageId":"30","endLine":6,"endColumn":31,"fix":"31"},{"ruleId":"27","severity":1,"message":"32","line":6,"column":35,"nodeType":"33","messageId":"34","endLine":6,"endColumn":35,"fix":"35"},{"ruleId":"27","severity":1,"message":"28","line":7,"column":29,"nodeType":"29","messageId":"30","endLine":7,"endColumn":29,"fix":"36"},{"ruleId":"27","severity":1,"message":"32","line":7,"column":33,"nodeType":"33","messageId":"34","endLine":7,"endColumn":33,"fix":"37"},{"ruleId":"38","severity":1,"message":"39","line":14,"column":13,"nodeType":"33","messageId":"34","endLine":16,"endColumn":1,"fix":"40"},{"ruleId":"41","severity":1,"message":"42","line":4,"column":14,"nodeType":"43","endLine":4,"endColumn":24},"vue/html-self-closing","Disallow self-closing on HTML void elements (<input/>).","VElement",{"range":"44","text":"45"},"vue/attributes-order","Attribute \"v-model\" should go before \"name\".","VAttribute",{"range":"46","text":"47"},"vue/singleline-html-element-content-newline","Expected 1 line break after opening tag (`<button>`), but no line breaks found.","HTMLTagClose","unexpectedAfterClosingBracket",{"range":"48","text":"49"},"Expected 1 line break before closing tag (`</button>`), but no line breaks found.","HTMLEndTagOpen","unexpectedBeforeOpeningBracket",{"range":"50","text":"49"},{"range":"51","text":"49"},{"range":"52","text":"49"},"vue/multiline-html-element-content-newline","Expected 1 line break before closing tag (`</template>`), but 2 line breaks found.",{"range":"53","text":"49"},"import/no-named-as-default-member","Caution: `Vuex` also has a named export `Store`. Check if you meant to write `import {Store} from 'vuex'` instead.","MemberExpression",[139,141],">",[89,121],"v-model=\"content\" name=\"content\"",[186,186],"\n",[190,190],[228,228],[232,232],[468,470]]